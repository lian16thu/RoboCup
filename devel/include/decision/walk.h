// Generated by gencpp from file decision/walk.msg
// DO NOT EDIT!


#ifndef DECISION_MESSAGE_WALK_H
#define DECISION_MESSAGE_WALK_H

#include <ros/service_traits.h>


#include <decision/walkRequest.h>
#include <decision/walkResponse.h>


namespace decision
{

struct walk
{

typedef walkRequest Request;
typedef walkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct walk
} // namespace decision


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::decision::walk > {
  static const char* value()
  {
    return "abed49acefdf43a65d0e6ffd2bf04f9b";
  }

  static const char* value(const ::decision::walk&) { return value(); }
};

template<>
struct DataType< ::decision::walk > {
  static const char* value()
  {
    return "decision/walk";
  }

  static const char* value(const ::decision::walk&) { return value(); }
};


// service_traits::MD5Sum< ::decision::walkRequest> should match 
// service_traits::MD5Sum< ::decision::walk > 
template<>
struct MD5Sum< ::decision::walkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::decision::walk >::value();
  }
  static const char* value(const ::decision::walkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::decision::walkRequest> should match 
// service_traits::DataType< ::decision::walk > 
template<>
struct DataType< ::decision::walkRequest>
{
  static const char* value()
  {
    return DataType< ::decision::walk >::value();
  }
  static const char* value(const ::decision::walkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::decision::walkResponse> should match 
// service_traits::MD5Sum< ::decision::walk > 
template<>
struct MD5Sum< ::decision::walkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::decision::walk >::value();
  }
  static const char* value(const ::decision::walkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::decision::walkResponse> should match 
// service_traits::DataType< ::decision::walk > 
template<>
struct DataType< ::decision::walkResponse>
{
  static const char* value()
  {
    return DataType< ::decision::walk >::value();
  }
  static const char* value(const ::decision::walkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DECISION_MESSAGE_WALK_H
